{
    "Training_DatasetFormat": "Hier können Sie das Format für den Datensatz wählen, mit dem das Netz trainiert werden soll. Das ausgewählte Format bestimmt, welche Dateien Sie in den Feldern <i>Trainingdaten</i> und <i>Validierungsdaten</i> auswählen können. Folgende Formate sind verfügbar:<ul><li><b>ImageRecord</b><br>Enthält die Ordner <i>train, val</i> (für Training- und Validierungsdatensatz). Die Bilder werden in einer .rec-Datei gespeichert, während die Labels in einer .lst-Datei gespeichert werden.</li><li><b>COCO</b><br>Enthält die Ordner <i>annotations, train, val</i>. Die Bilder liegen in den Ordnern <i>train, val</i>, während die Labels in <i>annotations</i> in .json-Dateien gespeichert werden.</li><li><b>VOC</b><br>Enthält die Ordner <i>Annotations, ImageSets, JPEGImages</i>. Die Bilder liegen in <i>JPEGImages</i>, während die Labels in <i>Annotations</i> in .xml-Dateien gespeichert werden. Die Aufteilung für Training und Validierung ist in .txt-Dateien im Ordner <i>ImageSets/Main</i> festgehalten.</li></ul>",
    "Training_TrainingDataset": "Die Traingdaten enthalten die Bilder und Labels, die beim Trainieren eines Netzes in jeder Epoche verwendet werden. Anhand dieser Daten lernt das Netz Objekte auch in anderen Daten zu erkennen.",
    "Training_ValidationDataset": "Die Validierungsdaten dienen dazu, nach jeder Training-Epoche das Ergebnis zu validieren. Dafür ist es wichtig, dass die Validierungsdaten <i>nicht</i> mit den Trainingdaten identisch sind. Durch die Validierung lässt sich feststellen, wie gut das trainierte Netz auf unbekannte Daten (also Daten, mit denen es nicht trainiert wurde) reagiert.",
    "Training_TrainingName": "Der Trainingname bestimmt den Namen des Ordners unter \"<i>Projektordner</i>/trainings\", in dem alle Daten, die beim Training erzeugt werden, abgelegt werden. Ist der Trainingname <i>Netz001</i>, werden alle zugehörigen Daten unter \"<i>Projektordner</i>/trainings/Netz001\" gespeichert.",
    "Training_CreateDataset": "Damit ein neuronales Netz annotierte Bilder korrekt verarbeiten und erlernen kann, müssen die Daten zu einem Datensatz in einem vordefinierten Format zusammengefasst werden. Wenn Sie einen Ordner mit annotierten Bildern geöffnet haben, können Sie mit dieser Einstellung automatisch einen Datensatz daraus erzeugen lassen.",
    "Training_ValidationRatio": "Die Validierungsrate gibt an, wie viel Prozent der Daten nicht in die Trainingdaten aufgenommen werden sollen. Dieser Teil wird stattdessen in einem separaten Validierungsdatensatz gespeichert, mit dem nach jeder Epoch des Trainings eine Validierung der Trainingergebnisse durchgeführt werden kann. Ein geeigneter Wert liegt bei etwa 10-20%.",
    
    "Training_NetworkArchitecture": "Hier können Sie die Netz-Architektur auswählen. Aktuell sind die Netze <b>YoloV3</b> und <b>SSD512</b> vorhanden, die beide auf Objekterkennung in Bildern spezialisiert sind. Die Variante <i>Mobilenet1.0</i> gibt es für beide Architekturen und erlaubt ähnlich gute Ergebnisse bei weitaus weniger GPU-Speicherverbrauch.",
    "Training_SettingsEpochs": "Eine Epoche beim Training entspricht einem Durchlauf mit allen Trainingdaten. Nach einer vollständigen Epoche wird (sofern vorhanden) eine Validierung mit dem Validierungsdatensatz durchgeführt und anschließend eine neue Epoche begonnen, in der wieder sämtliche Trainingsdaten einmal in das Netz gespeist werden. Standardmäßig werden viele Epochen durchgeführt. Es besteht aber die Möglichkeit, das Training über die <i>Early-Stop</i>-Einstellung frühzeitig zu beenden, wenn keine Verbesserung der Genauigkeit mehr erreicht wird.",
    "Training_SettingsBatchSize": "Die Stapelgröße legt fest, wie viele Bilder zeitgleich für eine Trainingiteration auf die GPU verschoben werden. Die maximal mögliche Stapelgröße wird durch den verfügbaren Speicher auf der GPU begrenzt und ist abhängig von der gewählten Netz-Architektur. Beim Auswählen einer Netz-Architektur wird versucht, die optimale Stapelgröße zu ermitteln.",
    "Training_SettingsLearningRate": "Die Lernrate definiert mit welcher Schrittgröße die internen Parameter einen Netzes beim Training aktualisiert werden. Eine zu kleine Lernrate führt zu einem sehr langsamen Training, eine zu große Rate führt zu schlechteren Ergebnissen. Eine geeignete Lernrate wird für jede Netz-Architektur voreingestellt.",
    "Training_SettingsEarlyStop": "Der Early-Stop-Parameter bestimmt, ob das Training vorzeitig beendet werden kann, wenn nach der hier festgelegten Anzahl an Epochen keine Verbesserung der Genauigkeit des Netzes mehr erreicht wurde.",
    
    "Training_Resume": "Wählen Sie hier einen Ordner aus, der ein früheres Training enthält, um dieses weiter zu trainieren. Sobald ein Ordner ausgewählt worden ist, werden alle Einstellungen des alten Trainings automatisch für das neue übernommen. Außerdem können Sie dann eine Epoche auswählen, nach der das Training fortgesetzt werden soll.",
    
    "Validation_InputImage": "Wählen Sie ein Bild aus, in dem ein trainiertes Netz Objekte erkennen soll.",
    "Validation_TrainingFolder": "Wählen Sie hier einen Ordner aus, in dem zuvor ein Netz mit dieser Software trainiert worden ist. Überlicherweise liegen die trainierten Netze unter \"<i>Projektordner</i>/trainings/<i>Trainingname</i>\".",
    
    "Inference_Confidence": "Die Wahrscheinlichkeit gibt Aufschluss darüber, wie sicher das Netz ein Objekt erkannt hat. Unter schwierigen Bedingungen sinkt häufig die Wahrscheinlichkeit erkannter Objekte.",
    "Inference_NetworkConfig": "Die Netzwerk-Konfiguration enthält alle Parameter, die zum Training des Netzwerks genutzt worden sind.",
    "Inference_Config_Epochs": "Die Anzahl der tatsächlich trainierten Epochen kann kleiner sein, als die vorher festgelegte Zahl an Epochen, wenn der <i>Early-Stop-Parameter</i> gesetzt worden ist. In diesem Fall kann das Training beendet werden, sobald die Genauigkeit sich mehrere Epochen nacheinander nicht verbessert hat.",
    
    "Settings_ProjectFolder": "Im Projektordner werden alle Dateien wie Bilder, Datensätze und trainierte Netze gespeichert. Die Unterordner <i>datasets, imports, trainings</i> werden automatisch im Projektordner angelegt.",
    "Settings_SingleLabelMode": "Im Ein-Label-Modus wird jedes gezeichnete Polygon oder Rechteck mit dem gleichen Label versehen. Dies beschleunigt die Arbeit beim Annotieren eines Datensatzes, in dem ohnehin nur ein Label vertreten ist.",
    
    "__last__": "The last entry MUST NOT be followed by a , (comma)"
}